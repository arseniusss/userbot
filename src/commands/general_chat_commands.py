import asyncio
import random
from ..constants_imports.imports import clients_array, userbots_collection, RANDOMBOT_ID
from helper_commands.emoji_handler import emoji_loot_map


async def get_curr_chat_activities(client_index: int, chat_id: int, message_id: int):
    # TODO: —â–æ–± –ø–æ–∫–∞–∑—É–≤–∞–ª–æ —Å–∫—ñ–ª—å–∫–∏ —á–∞—Å—É —Ç–æ–º—É –±—É–ª–∞ –æ—Å—Ç–∞–Ω–Ω—è –±–∏—Ç–≤–∞/–º—ñ–∂—á–∞—Ç/—Ä–µ–π–¥
    chat = await clients_array[client_index].get_entity(chat_id)
    chat_link = f"<a href='https://t.me/c/{str(chat_id).replace('-100', '')}"
    message_to_send = f"–ü–æ—Ç–æ—á–Ω—ñ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ –≤ —á–∞—Ç—ñ {chat.title}:\n"
    war_msg = await clients_array[client_index].get_messages(chat, from_user=RANDOMBOT_ID, search="üåè –ü–æ—á–∏–Ω–∞—î—Ç—å—Å—è –º—ñ–∂—á–∞—Ç–æ–≤–∞", limit=1)
    message_to_send+="–ú—ñ–∂—á–∞—Çüåê: "
    for message in war_msg:
        if message.reply_markup is not None:
            message_to_send += f"{chat_link}/{message.id}'>—Ç—É—Ç</a>"
        else:
            message_to_send+=("–∑–∞—Ä–∞–∑ –Ω–µ–º–∞, –æ—Å—Ç–∞–Ω–Ω—ñ–π –±—É–≤ " + f"{chat_link}/{message.id}'>—Ç—É—Ç</a>")
    battle_messages = await clients_array[client_index].get_messages(chat, from_user=RANDOMBOT_ID, search="‚öîÔ∏è –ü–æ—á–∏–Ω–∞—î—Ç—å—Å—è –±–∏—Ç–≤–∞", limit=4)
    battle_msg = ''
    
    for message in battle_messages:
        if "–ü–æ—á–∏–Ω–∞—î—Ç—å—Å—è –±–∏—Ç–≤–∞" not in message.text:
            continue
        battle_msg = f"{chat_link}/{message.id}'>—Ç—É—Ç</a>" if message.reply_markup is not None else "–∑–∞—Ä–∞–∑ –Ω–µ–º–∞, –æ—Å—Ç–∞–Ω–Ω—è –±—É–ª–∞ " + f"{chat_link}/{message.id}'>—Ç—É—Ç</a>"
     
    if battle_msg:
        message_to_send += "\n–ú–∞—Å–æ–≤–∞ –±–∏—Ç–≤–∞‚öîÔ∏è: " + battle_msg
    else:
        message_to_send += "\n–ú–∞—Å–æ–≤–∞ –±–∏—Ç–≤–∞‚öîÔ∏è: –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ"
    
    raid_msg = await clients_array[client_index].get_messages(chat, from_user=RANDOMBOT_ID, search="üí∞ –ü–æ—á–∏–Ω–∞—î—Ç—å—Å—è —Ä–µ–π–¥", limit=1)
    message_to_send+="\n–†–µ–π–¥üí∞: "
    message_to_send+=f"{chat_link}/{raid_msg[0].id}'>—Ç—É—Ç</a>" if raid_msg[0].reply_markup is not None else f"–∑–∞—Ä–∞–∑ –Ω–µ–º–∞, –æ—Å—Ç–∞–Ω–Ω—ñ–π –±—É–≤ {chat_link}/{raid_msg[0].id}'>—Ç—É—Ç</a>"
    
    convoy_loot_msg = await clients_array[client_index].get_messages(chat, from_user=RANDOMBOT_ID, search="–†—É—Å–∞–∫–∏ –ø—Ä–∏—ó—Ö–∞–ª–∏ –≥—Ä–∞–±—É–≤–∞—Ç–∏ –≥—É–º–∫–æ–Ω–≤–æ–π", limit=1)
    message_to_send+="\n–ü–∞–∫–∏ –∑ –∫–æ–Ω–≤–æ—èüì¶: "
    for message in convoy_loot_msg:
        loot_dict = emoji_loot_map(message.text)
        message_to_send += f"{chat_link}/{message.id}'>—Ç—É—Ç</a>"
        loot_str = ""
        for key, value in loot_dict.items():
            loot_str+=(str(key) + str(value))
        message_to_send+=(" ("+loot_str+")")
        if message.reply_markup is None:
            message_to_send += ", –∞–ª–µ –≤–∂–µ –∑—ñ–∂—Ä–∞–ª–∏"
    
    other_loot_msg = await clients_array[client_index].get_messages(chat, from_user=RANDOMBOT_ID, search="–ü—Ä–æ–≤–µ–¥–µ–Ω–æ —Ä–µ–π–¥ –Ω–∞", limit=1)
    message_to_send+="\n–Ü–Ω—à–∏–π –ª—É—Çüé∞: "
    for message in other_loot_msg:
        loot_dict = emoji_loot_map(message.text)
        message_to_send += f"{chat_link}/{message.id}'>—Ç—É—Ç</a>"
        loot_str = ""
        for key, value in loot_dict.items():
            loot_str+=(str(key) + str(value))
        message_to_send+=(" ("+loot_str+")")
        if message.reply_markup is None:
            message_to_send += ", –∞–ª–µ –≤–∂–µ –∑—ñ–∂—Ä–∞–ª–∏"
    
    await asyncio.sleep(0.5)
    await clients_array[client_index].send_message(chat_id, message_to_send, reply_to=message_id, parse_mode="html")


async def crash_battle(client_index: int, chat_id: int):
    chat = await clients_array[client_index].get_entity(chat_id)
    user_doc = userbots_collection.find_one(
        {
            "index": client_index,
        }
    )
    ids_to_delete = user_doc.get("last_battle_id", 100)
    old_battle_msg = await clients_array[client_index].get_messages(chat, ids=ids_to_delete)
    await old_battle_msg.delete()

    await asyncio.sleep(0.4+random.random()*0.6)
    await clients_array[client_index].send_message(chat_id, "/battle")
    await asyncio.sleep(0.4+random.random()*0.6)
    await clients_array[client_index].send_message(chat_id, "/battle")